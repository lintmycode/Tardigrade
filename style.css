:root {
  --c-text: #aaa;
  --c-bg: #222;
  --c-bg-alt: #333;
  --c-text-active: #fff;
  --c-bg-active: #007878;
  --c-alert: #f15858;
}

*, *::before, *::after {
  box-sizing: border-box;
}

html, body {
  margin: 0;
}

body {
  margin: 0;
  height: 100vh;
  font-family: 'Courier New', Courier, monospace;
  font-size: 62.5%;
  background-color: var(--c-bg);
  color: var(--c-text);
  border-color: var(--c-text);
  transition: all 500ms ease-in-out;
  display: flex;
  gap: 1rem;
  width: 100%;
}

  @media (max-width: 900px) {
    body {
      flex-direction: column-reverse;
    }
  }

  body.running {
    color: var(--c-text-active);
    border-color: var(--c-text-active);
    background-color: var(--c-bg-active);
  }

  body.running .stopwatch-toggle {
    border: 1px solid var(--c-text-active);
    background-color: transparent;
  }

  body.running h1:after {
    content: "";
    background-image: url(icons/edit-alt.svg);
  }

  body.running .lap-title {
    color: var(--c-text-active);
  }

    body.running .lap-title::placeholder {
      color: var(--c-text-active);
    }

  body.running .stopwatch-toggle {
    color: var(--c-text-active);
  }

    body.running .stopwatch-toggle:hover {
      color: var(--c-text);
      background-color: var(--c-bg);
    }

ul {
  list-style: none;
  padding: 0;
  font-size: 1rem;
  margin: 0;
}

li {
  width: 100%;
}

.hidden {
  display: none;
}

textarea {
  background-color: transparent;
  color: var(--c-text);
}

button,
input,
textarea {
  border: 0;
  transition: all 200ms ease-in-out;
  font-family: 'Courier New', Courier, monospace;
  font-size: 1.2rem;
}

input[type=text] {
  border-bottom: 1px solid transparent;
  background: transparent;
  padding: .6rem 0;
  font-size: 1.8rem;
  text-align: left;
  outline: 0;
  color: var(--c-text);
}

  input[type=text]:focus {
    border-bottom: 1px solid var(--c-text);
  } 

button {
  cursor: pointer;
  padding: .3rem 1rem;
  transition: 100ms all ease-in-out;
  font-size: 1rem;
}

  button.primary {
    background-color: var(--c-bg);
    color: var(--c-text);
    border: 1px solid var(--c-text);
  }

    button.primary:hover,
    button.primary:active {
      background-color: var(--c-bg-active);
      border: 1px solid var(--c-bg-active);
      color: var(--c-text-active);
    }

  button.secondary {
    background-color: transparent;
    color: var(--c-text);
    border: 0;
    border-bottom: 1px solid var(--c-text);
    padding: 0;
    display: inline-flex;
  }

  button.alert {
    background-color: transparent;
    color: var(--c-alert);
    border: 1px solid var(--c-alert);
  }

    button.alert:hover,
    button.alert:active {
      background-color: var(--c-alert);
      color: var(--c-text-active);
    }

  button:disabled {
    opacity: .5;
    cursor: default;
    pointer-events: none;
  }

body > main {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  height: 100%;
  flex: 1 1 0;
}

  @media (max-width: 900px) {
    body > main {
      flex: 0 0 20vh;
      min-height: 12rem;
    }
  }

h1 {
  /* padding: .6rem 0; */
  font-size: 1.8rem;
  font-weight: 400;
  display: flex;
  gap: 1rem;
  justify-content: space-between;
  align-items: baseline;
  cursor: pointer;
  margin: 0;
}

  h1:after {
    content: "";
    background-image: url(icons/edit.svg);
    background-size: contain;
    width: 1rem;
    height: 1rem;
    flex: 0 0 1rem;
    transition: all 500ms ease-in-out;
  }

  h1.hidden {
    display: none;
  }

input.lap-title {
  text-align: center;
  cursor: pointer;
} 

.time {
  font-size: 4rem;
}

button.stopwatch-toggle {
  cursor: pointer;
  text-transform: uppercase;
  font-size: 1rem;
  background-color: transparent;
}

aside {
  flex: 1 1 0;
  display: flex;
}

.tasks {
  flex: 0 0 20vw;
  background-color: var(--c-bg);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 2rem;
}

  @media (max-width: 900px) {
    .tasks {
      flex-basis: 50%;
    }
  }

  .tasks main {
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .tasks footer {
    padding: 0 1rem 1rem;
  }

    .tasks footer ul {
      display: inline-flex;
      align-items: center;
      gap: 1rem;
    }

    .tasks footer img {
      width: 1.6rem;
      height: 1.6rem;
    }

  .tasks ul {
    overflow: auto;
  }

  .tasks li {
    display: flex;
  }
   
    .tasks li.active {
      background: var(--c-bg-alt);
    }

  .tasks .select {
    background-color: transparent;
    color: var(--c-text); 
    width: 100%;
    border: 0;
    padding: 1rem;
    text-align: left;
  }

  button.new-task {
    margin: 1rem;
    font-size: 1rem;
    align-self: flex-start;
  }

.laps {
  flex: 0 0 30vw;
  padding: 1rem 2rem;
  font-size: 1.2rem;
  background: var(--c-bg-alt);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 2rem;
  height: 100%;
}

  @media (max-width: 900px) {
    .laps {
      flex-basis: 50%;
      padding: 1rem;
    }
  }

  .laps main {
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .laps h2 {
    font-weight: 400;
    margin: 0 0 1rem;
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    align-items: baseline;
    cursor: pointer;
  }

    .laps h2:after {
      content: "";
      background-image: url(icons/edit.svg);
      background-size: contain;
      width: 1rem;
      height: 1rem;
      flex: 0 0 1rem;
    }

    .laps h2.hidden {
      display: none;
    }

  .laps h3 {
    font-weight: 400;
    /* border-top: 1px solid var(--c-text);
    padding-top: 1rem; */
  }

  .laps ul {
    overflow: auto;
  }

    .laps li {
      padding: .5rem 0;
      display: flex;
      gap: .8rem;
      align-items: center;
      justify-content: space-between;
      background-color: transparent;
    }

      .laps li:hover {
        background-color: var(--c-bg);
        color: var(--c-text-active);
        padding-right: .5rem;
      }

    .laps li span {
      display: none;
      font-size: .8rem;
      gap: .8rem;
      align-items: center;
      justify-content: end;
      flex: 1 1 auto;
      white-space: nowrap;
    }

      .laps li:hover span {
        display: inline-flex;
      }

      .laps li span button.delete {
        font-size: 1rem;
        align-self: flex-end;
        padding: 0;
        color: var(--c-alert);
        background-color: transparent;
      }

  .laps input.task-title {
    width: 100%;
    margin-bottom: 1rem;
    padding-top: 0;
  }
